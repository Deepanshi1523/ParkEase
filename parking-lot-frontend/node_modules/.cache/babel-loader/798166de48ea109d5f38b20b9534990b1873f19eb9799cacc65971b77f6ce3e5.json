{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DEEPANSHI\\\\Downloads\\\\parkease\\\\parking-lot-frontend\\\\src\\\\components\\\\AllocateSlot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllocateSlot = () => {\n  _s();\n  const [numberPlate, setNumberPlate] = useState('');\n  const [selectedSize, setSelectedSize] = useState('');\n  const [message, setMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Perform form validation here if needed\n    if (!numberPlate || !selectedSize) {\n      setMessage('Please enter your number plate and select a size.');\n      return;\n    }\n    try {\n      // Check slot availability\n      const response = await axios.get(`http://localhost:8000/check-slot?size=${selectedSize}`);\n      if (response.data.available) {\n        // Slot is available, update the database\n        await axios.put(`http://localhost:8000/allocate-slot/${response.data.slotId}`, {\n          numberPlate\n        });\n        alert(`Slot allocated successfully!\\nNumber Plate: ${numberPlate}\\nSize: ${selectedSize}`);\n      } else {\n        // Slot is not available\n        alert('No available slots of this size.');\n      }\n    } catch (error) {\n      console.error('Error allocating slot:', error);\n      alert('Error allocating slot. Please try again later.');\n    }\n    // Clear form fields after submission\n    setNumberPlate('');\n    setSelectedSize('');\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Allocate Parking Slot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"numberPlate\",\n        children: \"Number Plate:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"numberPlate\",\n        value: numberPlate,\n        onChange: e => setNumberPlate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"size\",\n        children: \"Select Size:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"size\",\n        value: selectedSize,\n        onChange: e => setSelectedSize(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Small\",\n          children: \"Small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Medium\",\n          children: \"Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Large\",\n          children: \"Large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Large\",\n          children: \"xlarge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Allocate Slot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Back to Homepage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(AllocateSlot, \"a3WL05AXgaqBpyru5UYRX0hgu24=\");\n_c = AllocateSlot;\nexport default AllocateSlot;\nvar _c;\n$RefreshReg$(_c, \"AllocateSlot\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","AllocateSlot","_s","numberPlate","setNumberPlate","selectedSize","setSelectedSize","message","setMessage","handleSubmit","e","preventDefault","response","axios","get","data","available","put","slotId","alert","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","to","_c","$RefreshReg$"],"sources":["C:/Users/DEEPANSHI/Downloads/parkease/parking-lot-frontend/src/components/AllocateSlot.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AllocateSlot = () => {\r\n  const [numberPlate, setNumberPlate] = useState('');\r\n  const [selectedSize, setSelectedSize] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleSubmit = async(e) => {\r\n    e.preventDefault();\r\n    // Perform form validation here if needed\r\n    if (!numberPlate || !selectedSize) {\r\n      setMessage('Please enter your number plate and select a size.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Check slot availability\r\n      const response = await axios.get(`http://localhost:8000/check-slot?size=${selectedSize}`);\r\n      if (response.data.available) {\r\n        // Slot is available, update the database\r\n        await axios.put(`http://localhost:8000/allocate-slot/${response.data.slotId}`, { numberPlate });\r\n        alert(`Slot allocated successfully!\\nNumber Plate: ${numberPlate}\\nSize: ${selectedSize}`);\r\n      } else {\r\n        // Slot is not available\r\n        alert('No available slots of this size.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error allocating slot:', error);\r\n      alert('Error allocating slot. Please try again later.');\r\n    }\r\n    // Clear form fields after submission\r\n    setNumberPlate('');\r\n    setSelectedSize('');\r\n    setMessage('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Allocate Parking Slot</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"numberPlate\">Number Plate:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"numberPlate\"\r\n          value={numberPlate}\r\n          onChange={(e) => setNumberPlate(e.target.value)}\r\n        />\r\n        <label htmlFor=\"size\">Select Size:</label>\r\n        <select\r\n          id=\"size\"\r\n          value={selectedSize}\r\n          onChange={(e) => setSelectedSize(e.target.value)}\r\n        >\r\n          <option value=\"\">Select</option>\r\n          <option value=\"Small\">Small</option>\r\n          <option value=\"Medium\">Medium</option>\r\n          <option value=\"Large\">Large</option>\r\n          <option value=\"Large\">xlarge</option>\r\n        </select>\r\n        <button type=\"submit\">Allocate Slot</button>\r\n      </form>\r\n      {message && <p>{message}</p>}\r\n      <Link to=\"/\">Back to Homepage</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllocateSlot;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}